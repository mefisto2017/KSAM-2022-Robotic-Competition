TrajectoryPlannerROS:

# http://wiki.ros.org/base_local_planner

# Robot Configuration Parameters
  # The maximum forward velocity allowed for the base in meters/sec 
  max_vel_x: 0.18
  # The minimum forward velocity allowed for the base in meters/sec
  min_vel_x: -0.18 # https://answers.ros.org/question/207377/how-to-remove-forward-bias-in-move_base/

  # The maximum rotational velocity allowed for the base in radians/sec 
  max_vel_theta:  1.0
  # The minimum rotational velocity allowed for the base in radians/sec
  min_vel_theta: -1.0
  # The minimum rotational velocity allowed for the base while performing in-place rotations in radians/sec 
  min_in_place_vel_theta: 1.0

  # The x acceleration limit of the robot in meters/sec^2 
  acc_lim_x: 1.0
  # The y acceleration limit of the robot in meters/sec^2 
  acc_lim_y: 0.0
  # The rotational acceleration limit of the robot in radians/sec^2
  acc_lim_theta: 0.6

  # Speed used for driving during escapes in meters/sec. Note that it must be negative in order for the robot to actually reverse. A positive speed will cause the robot to move forward while attempting to escape.
  escape_vel: 0.1 # Our robot moves backwards

# Goal Tolerance Parameters
  # The tolerance in meters for the controller in the x & y distance when achieving a goal 
  xy_goal_tolerance: 0.10
  # The tolerance in radians for the controller in yaw/rotation when achieving its goal 
  yaw_goal_tolerance: 0.2

# Differential-drive robot configuration
  # Determines whether velocity commands are generated for a holonomic or non-holonomic robot. For holonomic robots, strafing velocity commands may be issued to the base. For non-holonomic robots, no strafing velocity commands will be issued. 
  holonomic_robot: false

# Forward Simulation Parameters
  # The amount of time to forward-simulate trajectories in seconds 
  sim_time: 0.8
  # The number of samples to use when exploring the x velocity space 
  vx_samples: 18
  # The number of samples to use when exploring the theta velocity space 
  vtheta_samples: 20
  #The step size, in meters, to take between points on a given trajectory 
  sim_granularity: 0.01

# Trajectory Scoring Parameters
  # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and path_distance are expressed in units of meters or cells. 
  meter_scoring: false
  # The weighting for how much the controller should attempt to reach its local goal, also controls speed, maximal possible value is 5.0 
  gdist_scale: 0.8
  # The weighting for how much the controller should attempt to avoid obstacles 
  occdist_scale: 0.01
  # How far to look ahead in meters when scoring different in-place-rotation trajectories 
  heading_lookahead: 0.325
  # Whether to score based on the robot's heading to the path or its distance from the path 
  heading_scoring: false
  # How far to look ahead in time in seconds along the simulated trajectory when using heading scoring 
  heading_scoring_timestep: 0.8
  # Whether to use the Dynamic Window Approach (DWA)
  dwa: true

# Oscillation Prevention Parameters
  # How far the robot must travel in meters before oscillation flags are reset 
  oscillation_reset_dist: 0.05